
import java.util.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        //TODO: write code here
        String menuStr = "";
        double total = 0.0;
        Map<String, String> cartItemsMap = new HashMap<>();
        List<Item> items = itemRepository.findAll();
        List<SalesPromotion> salesPromotions = salesPromotionRepository.findAll();

        for (int i = 0; i < inputs.size(); i++) {
            String itemInput = inputs.get(i).replace(" ", "");
            int index = itemInput.indexOf("x");
            //购物车里的某件商品信息
            String itemInputId = itemInput.substring(0, index);//中某物品的id
            String itemInputAmount = itemInput.substring(index + 1);//某物品的数量
            String itemInputName = "";//名字
            String itemInputPrice = "";//单价
            double itemInputTotal;//某物品总价
            //找出对应商品的名称和价格
            for (Item item : items) {
                if (item.getId().equals(itemInputId)) {
                    itemInputName = item.getName();
                    itemInputPrice = String.valueOf(item.getPrice());
                    break;
                }
            }
            String cartItem = itemInputName + "," + itemInputPrice + "," + itemInputAmount;
            cartItemsMap.put(itemInputId, cartItem);
            //计算原总价
            itemInputTotal = Double.parseDouble(itemInputPrice) * Integer.parseInt(itemInputAmount);
            total += itemInputTotal;
            //组合字符串
            menuStr += String.format("%s x %s = %d元\n", itemInputName, itemInputAmount, (int) itemInputTotal);//"黄焖鸡 x 1 = 18元\n"
        }

        //确定促销方式
        double mixTotal = total;
        boolean isDiscount = false;
        String discountStr = "";
        for (SalesPromotion salesPromotion : salesPromotions) {
            List<String> relatedItems = salesPromotion.getRelatedItems();
            String salesType = salesPromotion.getType();
            if (total > 30 && salesType.equals("BUY_30_SAVE_6_YUAN")) {
                mixTotal = total - 6;
                isDiscount = true;
                discountStr = salesPromotion.getDisplayName() + "，省6元\n";
            }
            if (salesType.equals("50%_DISCOUNT_ON_SPECIFIED_ITEMS")) {
                double reduceTotal = 0.0;
                List<String> discountItem = new ArrayList<>();
                for (int i = 0; i < relatedItems.size(); i++) {
                    if (cartItemsMap.containsKey(relatedItems.get(i))) {
                        String cartItemString = cartItemsMap.get(relatedItems.get(i));
                        List<String> cartItemList = Arrays.asList(cartItemString.split(","));
                        discountItem.add(cartItemList.get(0));
                        reduceTotal += Double.parseDouble(cartItemList.get(1)) / 2 * Integer.parseInt(cartItemList.get(2));
                    }
                }
                double secondWayTotal = total - reduceTotal;
                if (secondWayTotal < mixTotal) {
                    mixTotal = secondWayTotal;
                    isDiscount = true;
                    discountStr = salesPromotion.getDisplayName() + "(" + String.join("，", discountItem) + ")，省" + (int) reduceTotal + "元\n";
                }
            }
        }
        //组织返回字符串
        String orderStr = "============= 订餐明细 =============\n" + menuStr + "-----------------------------------\n";
        if (isDiscount) {
            orderStr += "使用优惠:\n" + discountStr + "-----------------------------------\n";
        }
        orderStr += "总计：" + (int) mixTotal + "元\n" + "===================================";
        return orderStr;
    }
}
